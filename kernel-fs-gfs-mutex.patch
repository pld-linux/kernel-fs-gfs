--- cluster-1.02.00/gfs-kernel/src/gfs/diaper.c~	2005-05-06 01:24:16.000000000 +0200
+++ cluster-1.02.00/gfs-kernel/src/gfs/diaper.c	2006-06-25 15:34:04.000000000 +0200
@@ -22,6 +22,7 @@
 #include <linux/blkdev.h>
 #include <linux/idr.h>
 #include <linux/mempool.h>
+#include <linux/version.h>
 
 #include "gfs.h"
 #include "diaper.h"
@@ -232,9 +233,17 @@
 	struct inode *inode;
 	int error;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_lock(&real->bd_mount_mutex);
+#else
 	down(&real->bd_mount_sem);
+#endif
 	sb = sget(&gfs_fs_type, gfs_test_bdev_super, gfs_set_bdev_super, real);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_unlock(&real->bd_mount_mutex);
+#else
 	up(&real->bd_mount_sem);
+#endif
 	if (IS_ERR(sb))
 		return PTR_ERR(sb);
 
@@ -362,8 +371,11 @@
 	diaper = bdget_disk(gd, 0);
 	if (!diaper)
 		goto fail_remove;
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_lock(&diaper->bd_mutex);
+#else
 	down(&diaper->bd_sem);
+#endif
 	if (!diaper->bd_openers) {
 		diaper->bd_disk = gd;
 		diaper->bd_contains = diaper;
@@ -372,7 +384,11 @@
 	} else
 		printk("GFS: diaper: reopening\n");
 	diaper->bd_openers++;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_unlock(&diaper->bd_mutex);
+#else
 	up(&diaper->bd_sem);
+#endif
 
 	dh->dh_mempool = mempool_create(512,
 					mempool_alloc_slab, mempool_free_slab,
@@ -395,14 +411,22 @@
 	mempool_destroy(dh->dh_mempool);
 
  fail_bdput:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_lock(&diaper->bd_mutex);
+#else
 	down(&diaper->bd_sem);
+#endif
 	if (!--diaper->bd_openers) {
 		invalidate_bdev(diaper, 1);
 		diaper->bd_contains = NULL;
 		diaper->bd_disk = NULL;
 	} else
 		printk("GFS: diaper: not closed\n");
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_unlock(&diaper->bd_mutex);
+#else
 	up(&diaper->bd_sem);
+#endif
 	bdput(diaper);	
 
  fail_remove:
@@ -437,14 +461,22 @@
 
 	mempool_destroy(dh->dh_mempool);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_lock(&diaper->bd_mutex);
+#else
 	down(&diaper->bd_sem);
+#endif
 	if (!--diaper->bd_openers) {
 		invalidate_bdev(diaper, 1);
 		diaper->bd_contains = NULL;
 		diaper->bd_disk = NULL;
 	} else
 		printk("GFS: diaper: not closed\n");
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_unlock(&diaper->bd_mutex);
+#else
 	up(&diaper->bd_sem);
+#endif
 
 	bdput(diaper);
 	del_gendisk(gd);
--- cluster-1.02.00/gfs-kernel/src/gfs/ops_fstype.c.orig	2006-06-25 15:47:24.000000000 +0200
+++ cluster-1.02.00/gfs-kernel/src/gfs/ops_fstype.c	2006-06-25 15:48:52.000000000 +0200
@@ -20,6 +20,7 @@
 #include <linux/buffer_head.h>
 #include <linux/vmalloc.h>
 #include <linux/blkdev.h>
+#include <linux/version.h>
 
 #include "gfs.h"
 #include "daemon.h"
@@ -697,9 +698,17 @@
 		return (struct super_block *)diaper;
 	}
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_lock(&diaper->bd_mount_mutex);
+#else
 	down(&diaper->bd_mount_sem);
+#endif
 	sb = sget(fs_type, gfs_test_bdev_super, gfs_set_bdev_super, diaper);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 17)
+	mutex_unlock(&diaper->bd_mount_mutex);
+#else
 	up(&diaper->bd_mount_sem);
+#endif
 	if (IS_ERR(sb))
 		goto out;
 
